(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{596:function(a,s,t){"use strict";t.r(s);var n=t(17),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"validated注解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#validated注解"}},[a._v("#")]),a._v(" @Validated注解")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.zhangshengrong.com/p/P71MbAnlad/",target:"_blank",rel:"noopener noreferrer"}},[a._v("@Validated注解  和  @Valid的区别"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Null")]),a._v("       验证对象是否为"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@NotNull")]),a._v("    验证对象是否不为"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" 无法查检长度为"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("的字符串\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@NotBlank")]),a._v(" 检查约束字符串是不是"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Null")]),a._v("还有被"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Trim")]),a._v("的长度是否大于"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("只对字符串"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("且会去掉前后空格"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@NotEmpty")]),a._v(" 检查约束元素是否为NULL或者是"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("EMPTY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n \nBooelan")]),a._v("检查\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@AssertTrue")]),a._v("     验证 "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Boolean")]),a._v(" 对象是否为 "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("  \n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@AssertFalse")]),a._v("    验证 "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Boolean")]),a._v(" 对象是否为 "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("  \n \n长度检查\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Size")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("min"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" max"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" 验证对象（"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Array")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Collection")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Map")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v("）长度是否在给定的范围之内  \n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Length")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("min"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" max"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("  验证带注释的字符串是否在包含的最小值和最大值之间。\n \n日期检查\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Past")]),a._v("           验证 "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),a._v(" 和 "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Calendar")]),a._v(" 对象是否在当前时间之前  \n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Future")]),a._v("     验证 "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),a._v(" 和 "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Calendar")]),a._v(" 对象是否在当前时间之后  \n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Pattern")]),a._v("    验证 "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" 对象是否符合正则表达式的规则      "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Pattern")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("regexp "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"你好|不好"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("message "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"数据的不匹配"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n \n数值检查，建议使用在"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Stirng")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),a._v("类型，不建议使用在"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v("类型上，因为表单值为“”时无法转换为"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v("，但可以转换为"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Stirng")]),a._v("为"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),a._v("为"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Min")]),a._v("            验证 "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Number")]),a._v(" 和 "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" 对象是否大等于指定的值  \n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Max")]),a._v("            验证 "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Number")]),a._v(" 和 "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" 对象是否小等于指定的值  \n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@DecimalMax")]),a._v(" 被标注的值必须不大于约束中指定的最大值"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" 这个约束的参数是一个通过"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v("定义的最大值的字符串表示"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("小数存在精度\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@DecimalMin")]),a._v(" 被标注的值必须不小于约束中指定的最小值"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" 这个约束的参数是一个通过"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v("定义的最小值的字符串表示"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("小数存在精度\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Digits")]),a._v("     验证 "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Number")]),a._v(" 和 "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" 的构成是否合法  \n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Digits")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("integer"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("fraction"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" 验证字符串是否是符合指定格式的数字，interger指定整数精度，fraction指定小数精度。\n \n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("min"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" max"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" 检查数字是否介于min和max之间"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("min"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("max"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("50000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("message"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"range.bean.wage"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" wage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n \n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Valid")]),a._v(" 递归的对关联对象进行校验"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" 如果关联对象是个集合或者数组"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("那么对其中的元素进行递归校验"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("如果是一个map"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("则对其中的值部分进行校验"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("是否进行递归验证"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@CreditCardNumber")]),a._v("信用卡验证\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Email")]),a._v("  验证是否是邮件地址，如果为"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("不进行验证，算通过验证。\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@ScriptAssert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("lang"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("script"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" alias"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@URL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("protocol"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("host"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" port"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("regexp"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" flags"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br"),t("span",{staticClass:"line-number"},[a._v("18")]),t("br"),t("span",{staticClass:"line-number"},[a._v("19")]),t("br"),t("span",{staticClass:"line-number"},[a._v("20")]),t("br"),t("span",{staticClass:"line-number"},[a._v("21")]),t("br"),t("span",{staticClass:"line-number"},[a._v("22")]),t("br"),t("span",{staticClass:"line-number"},[a._v("23")]),t("br"),t("span",{staticClass:"line-number"},[a._v("24")]),t("br"),t("span",{staticClass:"line-number"},[a._v("25")]),t("br"),t("span",{staticClass:"line-number"},[a._v("26")]),t("br"),t("span",{staticClass:"line-number"},[a._v("27")]),t("br"),t("span",{staticClass:"line-number"},[a._v("28")]),t("br"),t("span",{staticClass:"line-number"},[a._v("29")]),t("br"),t("span",{staticClass:"line-number"},[a._v("30")]),t("br"),t("span",{staticClass:"line-number"},[a._v("31")]),t("br"),t("span",{staticClass:"line-number"},[a._v("32")]),t("br"),t("span",{staticClass:"line-number"},[a._v("33")]),t("br"),t("span",{staticClass:"line-number"},[a._v("34")]),t("br"),t("span",{staticClass:"line-number"},[a._v("35")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://www.pianshen.com/images/389/b7f57dbb7adff7fd9dc56e9bdad546bd.png",alt:"img"}})]),a._v(" "),t("p"),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("场景1.   【待付邮费】    已付款(包含无需付款)  但是 没有支付邮费\n场景2.   【代付款】    未付款( 未付款  可能  含有没付邮费 )   \n\t\t\t\t\t\t\t\t\t邮费的价格是有给前端的  需要时 可以显示出来  支付的时候会 包含邮费 一起支付\n场景3.   【反馈】      待反馈(即已收货 状态)状态\n场景4.   【退款】      预留  后面 针对物质集体退款\n\n1和2 按钮不会同时存在\n\n\n1,2,3 30    33    \n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);