(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{587:function(t,r,e){"use strict";e.r(r);var n=e(17),a=Object(n.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"springmvc的拦截器和过滤器的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#springmvc的拦截器和过滤器的区别"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.cnblogs.com/deityjian/p/12487227.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringMVC的拦截器和过滤器的区别"),e("OutboundLink")],1)]),t._v(" "),e("h4",{attrs:{id:"一-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-简介"}},[t._v("#")]),t._v(" 一 简介")]),t._v(" "),e("h4",{attrs:{id:"_1-过滤器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-过滤器"}},[t._v("#")]),t._v(" （1）过滤器：")]),t._v(" "),e("p",[t._v("依赖于servlet容器。在实现上基于函数回调，可以对几乎所有请求进行过滤，但是缺点是一个过滤器实例只能在容器初始化时调用一次。使用过滤器的目的是用来做一些过滤操作，获取我们想要获取的数据，比如：在过滤器中修改字符编码；在过滤器中修改HttpServletRequest的一些参数，包括：过滤低俗文字、危险字符等")]),t._v(" "),e("p",[t._v("关于过滤器的一些用法可以参考我写过的这些"),e("a",{attrs:{href:"http://www.07net01.com/2015/07/860262.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("文章"),e("OutboundLink")],1),t._v("：")]),t._v(" "),e("ul",[e("li",[t._v("继承HttpServletRequestWrapper以实现在Filter中修改HttpServletRequest的参数：https://www.zifangsky.cn/677.html")]),t._v(" "),e("li",[t._v("在SpringMVC中使用过滤器（Filter）过滤容易引发XSS的危险字符：https://www.zifangsky.cn/683.html")])]),t._v(" "),e("h4",{attrs:{id:"_2-拦截器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-拦截器"}},[t._v("#")]),t._v(" （2）拦截器：")]),t._v(" "),e("p",[t._v("依赖于web框架，在SpringMVC中就是依赖于SpringMVC框架。在实现上基于"),e("a",{attrs:{href:"http://www.07net01.com/tags-Java-0.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java"),e("OutboundLink")],1),t._v("的反射机制，属于面向切面"),e("a",{attrs:{href:"http://www.07net01.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("编程"),e("OutboundLink")],1),t._v("（AOP）的一种运用。由于拦截器是基于web框架的调用，因此可以使用Spring的依赖注入（DI）进行一些业务操作，同时一个拦截器实例在一个controller生命周期之内可以多次调用。但是缺点是只能对controller请求进行拦截，对其他的一些比如直接访问静态资源的请求则没办法进行拦截处理")]),t._v(" "),e("p",[t._v("关于过滤器的一些用法可以参考我写过的这些文章：")]),t._v(" "),e("ul",[e("li",[t._v("在SpringMVC中使用拦截器（interceptor）拦截CSRF攻击（修）：https://www.zifangsky.cn/671.html")]),t._v(" "),e("li",[t._v("SpringMVC中使用Interceptor+"),e("a",{attrs:{href:"http://www.07net01.com/tags-cookie-0.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("cookie"),e("OutboundLink")],1),t._v("实现在一定天数之内自动登录：https://www.zifangsky.cn/700.html")])])])}),[],!1,null,null,null);r.default=a.exports}}]);